load("~/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/Behav_Rlib_Oct18.RData")
#devtools::install_github("thomasp85/patchwork")
library(patchwork)
library(lme4)
library(lmerTest)
library(coxme)
library(survival)
library(lmfor)
library(nlme)
library(car)
# Install source packages to use ggeffects:
#library(devtools)
#devtools::install_github("strengejacke/sjlabelled")
#devtools::install_github("strengejacke/sjmisc")
#devtools::install_github("glmmTMB/glmmTMB/glmmTMB")
#devtools::install_github("strengejacke/sjstats")
#devtools::install_github("strengejacke/ggeffects")
library(ggeffects)
mixed_cox
summary(lmer_act_all2)
power.anova.test(groups = 2, n = NULL,
between.var = 80, within.var = 2,
sig.level = 0.05, power = 0.8)
power.anova.test(groups = 2, n = NULL,
between.var = var(c(2.16, 2, 1.56)), within.var = 2,
sig.level = 0.05, power = 0.8)
power.anova.test(groups = 2, n = NULL,
between.var = 30, within.var = 2,
sig.level = 0.05, power = 0.8)
power.anova.test(groups = 2, n = NULL,
between.var = 4, within.var = 2,
sig.level = 0.05, power = 0.8)
power.anova.test(groups = 2, n = NULL,
between.var = 2, within.var = 2,
sig.level = 0.05, power = 0.8)
power.anova.test(groups = 2, n = NULL,
between.var = 1, within.var = 2,
sig.level = 0.05, power = 0.8)
power.anova.test(groups = 2, n = NULL,
between.var = 3, within.var = 2,
sig.level = 0.05, power = 0.8)
power.anova.test(groups = 2, n = NULL,
between.var = 3, within.var = 2,
sig.level = 0.05, power = 0.9)
power.anova.test(groups = 2, n = NULL,
between.var = 3, within.var = 2,
sig.level = 0.05, power = 0.99)
power.anova.test(groups = 2, n = NULL,
between.var = 4, within.var = 2,
sig.level = 0.05, power = 0.99)
load("~/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/Behav_Rlib_Feb19.RData")
## Test the two models with likelihood ratio test
anova(glmer_exp, glmer_exp02) #better fit in 1, keep Arena in model
load("~/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/PM_trials_results/Final_pm_BehModels_jenni.RData")
# Run LRT
anova(glmer_exp, glmer_exp02) #No difference, use second model.
load("~/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/Behav_Rlib_Feb19.RData")
lht(lmer_act_all2,
hypothesis.matrix = c("PopVAA = 0", "PopVAA:SelectionLV = 0", "Photoperiod24:PopVAA = 0"), test = "F")
library(lmfor)
library(nlme)
library(car)
# Install source packages to use ggeffects:
#library(devtools)
#devtools::install_github("strengejacke/sjlabelled")
#devtools::install_github("strengejacke/sjmisc")
#devtools::install_github("glmmTMB/glmmTMB/glmmTMB")
#devtools::install_github("strengejacke/sjstats")
#devtools::install_github("strengejacke/ggeffects")
library(ggeffects)
library(blmeco)
lht(lmer_act_all2,
hypothesis.matrix = c("PopVAA = 0", "PopVAA:SelectionLV = 0", "Photoperiod24:PopVAA = 0"), test = "F")
# Test selection line
lht(lmer_act_all2,
hypothesis.matrix = c("PopVAA:SelectionLV = 0", "SelectionLV = 0"),
test = "F")
anova(lmer_act_all2, type="3")
load("~/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/Metabdata_models_Mar19.RData")
load("~/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/Behav_Rlib_Feb19.RData")
# MO2ave residuals
MO2ave_resid<- data_frame(ID = Metabdata$Fish_ID,
resid_MO2ave = resid(lmer_metab_ave))
############################################################################
### Models for behaviour data from angling selection experiment.
### Jenni Prokkola 2019
### Prokkola et al.
############################################################################
library(ggplot2)
#devtools::install_github("thomasp85/patchwork")
library(patchwork)
library(lme4)
library(lmerTest)
library(coxme)
library(survival)
library(lmfor)
library(nlme)
library(car)
library(tidyverse)
# MO2ave residuals
MO2ave_resid<- data_frame(ID = Metabdata$Fish_ID,
resid_MO2ave = resid(lmer_metab_ave))
# merge BLUPs with MO2min residuals
act_MO2ave<-merge(act_BLUPs, MO2ave_resid, by = "ID")
### 3. Explore correlations between behaviour and metabolic traits.
# 3.1. Activity and MO2min. Get predictions of individual activity (BLUPS)
act_BLUPs<- data_frame(ID = row.names(ranef(lmer_act_all2)$ID),
act_BLUP = ranef(lmer_act_all2)$ID[,"(Intercept)"])
# merge BLUPs with MO2min residuals
act_MO2ave<-merge(act_BLUPs, MO2ave_resid, by = "ID")
cor.test(act_MO2ave$act_BLUP,act_MO2ave$resid_MO2ave)
plot_act_MO2ave<-ggplot(act_MO2ave, aes(x=resid_MO2ave, y=act_BLUP))+
geom_point(alpha = 0.5)+
ylab("Activity BLUPs")+
xlab(expression(paste(dot(M), O["2,"][ave], " residuals")))+
annotate("text", x = 0.15, y = 0.05)+
theme_classic()
plot_act_MO2ave
plot_act_MO2ave<-ggplot(act_MO2ave, aes(x=resid_MO2ave, y=act_BLUP))+
geom_point(alpha = 0.5)+
ylab("Activity BLUPs")+
xlab(expression(paste(dot(M), O["2,"][ave], " residuals")))+
theme_classic()
plot_act_MO2ave
MO2min_resid<- data_frame(ID = Metabdata$Fish_ID,
resid_MO2min = resid(lmer_metab_full))
# merge BLUPs with MO2min residuals
act_MO2min<-merge(act_BLUPs, MO2min_resid, by = "ID")
cor.test(act_MO2min$act_BLUP,act_MO2min$resid_MO2min)
plot_act_MO2min<-ggplot(act_MO2min, aes(x=resid_MO2min, y=act_BLUP))+
geom_point(alpha = 0.5)+
ylab("Activity BLUPs")+
xlab(expression(paste(dot(M), O["2,"][min], " residuals")))+
annotate("text", x = 0.15, y = 0.05, label="r = 0.02, P = 0.85")+
theme_classic()
MO2min_resid<- data_frame(ID = Metabdata$Fish_ID,
resid_MO2min = resid(lmer_metab_full))
# merge BLUPs with MO2min residuals
act_MO2min<-merge(act_BLUPs, MO2min_resid, by = "ID")
cor.test(act_MO2min$act_BLUP,act_MO2min$resid_MO2min)
plot_act_MO2min<-ggplot(act_MO2min, aes(x=resid_MO2min, y=act_BLUP))+
geom_point(alpha = 0.5)+
ylab("Activity BLUPs")+
xlab(expression(paste(dot(M), O["2,"][min], " residuals")))+
annotate("text", x = 0.15, y = 0.05, label="r = 0.02, P = 0.85")+
theme_classic()
load("~/Dropbox/Myoglobin_Liverpool/Ucrit stuff/qPCR_brain_library.RData")
plate1_merged
Plate2_merged
library(plyr)
library(tidyr)
library(ggplot2)
ggplot(data = Plate2_merged, aes(group, FC_Cygb1))+
geom_point(alpha=1/2)+
stat_summary(geom='point', size=3, shape=2)+
theme_classic()
ggplot(data = Plate2_merged, aes(group, FC_Cygb2))+
geom_point(alpha=1/2)+
stat_summary(geom='point', size=3, shape=2)+
theme_classic()
ddply(Plate2_merged, c("group"), summarise,
FC_Cygb2 = mean(FC_Cygb2, na.rm = T))
ddply(Plate2_merged, c("group"), summarise,
FC_Ngb = mean(FC_Ngb, na.rm = T))
ddply(Plate2_merged, c("group"), summarise,
FC_Cygb1 = mean(FC_Cygb1, na.rm = T))
power.anova.test(groups = 3, n = NULL,between.var = 2, within.var = 2, sig.level = 0.05, power = 0.9)
power.anova.test(groups = 3, n = 14,between.var = 2, within.var = 2, sig.level = 0.05, power = NULL)
power.anova.test(groups = 3, n = 14,between.var = 3, within.var = 3, sig.level = 0.05, power = NULL)
power.anova.test(groups = 3, n = 14,between.var = 4, within.var = 3, sig.level = 0.05, power = NULL)
power.anova.test(groups = 3, n = 14,between.var = 2, within.var = 2, sig.level = 0.01, power = NULL)
power.anova.test(groups = 3, n = 14,between.var = 1, within.var = 2, sig.level = 0.01, power = NULL)
power.anova.test(groups = 3, n = 14,between.var = 1, within.var = 2, sig.level = 0.05, power = NULL)
install.packages("rnaseqsamplesize")
source("http://bioconductor.org/biocLite.R")
biocLite("ssizeRNA")
library(ssizeRNA)
size<-ssizeRNA_vary(nGenes = 25000, pi0=0.8, m=100, mu=15, disp=1.2, fc=1.5, replace = TRUE,
fdr=0.05, power=0.8, maxN=15, cex.title = 1, cex.legend = 0.8)
size
load("~/Dropbox/RNA-seq_Arctic_char/Old versions/Revised_2/Rlib_Sept.RData")
#mean(dge$counts[,c(4,5,6,10,11,12,16,17,18)]) #The average read count per gene in warm
counts_size <- dge$counts[,c(7,8,9)] ##
counts_size <- counts_size[rowSums(counts_size)  >0,]
d <- DGEList(counts_size)
library(edgeR)
d <- DGEList(counts_size)
d <- calcNormFactors(d)
d <- estimateCommonDisp(d)
d <- estimateTagwiseDisp(d)
disp <- d$tagwise.dispersion
set.seed(2016)
size<-ssizeRNA_vary(nGenes = 25000, pi0=0.8, m=100, mu=mu, disp=disp, fc=1.5, replace = TRUE,
fdr=0.05, power=0.8, maxN=15, cex.title = 1, cex.legend = 0.8)
mu<-as.vector(rowMeans(dge$counts[,c(1,2,3,7,8,9,13,14,15)])) #The average read count per gene in cold
size<-ssizeRNA_vary(nGenes = 25000, pi0=0.8, m=100, mu=mu, disp=disp, fc=1.5, replace = TRUE,
fdr=0.05, power=0.8, maxN=15, cex.title = 1, cex.legend = 0.8)
mu
mu<-mu[mu >0]
mu_cold2<-as.vector(rowMeans(dge$counts[,c(7,8,9)]))
mu_cold2<-mu_cold2[mu_cold2 >0]
size<-ssizeRNA_vary(nGenes = 25000, pi0=0.8, m=100, mu=mu_cold2, disp=disp, fc=1.5, replace = TRUE,
fdr=0.05, power=0.8, maxN=15, cex.title = 1, cex.legend = 0.8)
#mean(dge$counts[,c(4,5,6,10,11,12,16,17,18)]) #The average read count per gene in warm
counts_size <- dge$counts[,c(1,2,3,7,8,9,13,14,15)] ##
counts_size <- counts_size[rowSums(counts_size)  >0,]
d <- DGEList(counts_size)
d <- calcNormFactors(d)
d <- estimateCommonDisp(d)
d <- estimateTagwiseDisp(d)
disp <- d$tagwise.dispersion
set.seed(2016)
size<-ssizeRNA_vary(nGenes = 25000, pi0=0.9, m=100, mu=mu_cold2, disp=disp, fc=1.5, replace = TRUE,
fdr=0.05, power=0.8, maxN=15, cex.title = 1, cex.legend = 0.8)
ssizeRNA_single(nGenes = 20000, pi0 = 0.9, m = 200, mu, disp, fc,
up = 0.5, replace = TRUE, fdr = 0.05, power = 0.8, maxN = 35,
side = "two-sided", cex.title = 1.15, cex.legend = 1)
ssizeRNA_single(nGenes = 20000, pi0 = 0.9, m = 200, mu, disp, fc=1.5,
up = 0.5, replace = TRUE, fdr = 0.05, power = 0.8, maxN = 35,
side = "two-sided", cex.title = 1.15, cex.legend = 1)
ssizeRNA_single(nGenes = 20000, pi0 = 0.9, m = 200, mu, disp, fc=2,
up = 0.5, replace = TRUE, fdr = 0.05, power = 0.8, maxN = 35,
side = "two-sided", cex.title = 1.15, cex.legend = 1)
power.anova.test(groups = 4, n = 30,between.var = 1, within.var = 2, sig.level = 0.05, power = NULL)
power.anova.test(groups = 4, n = 30,between.var = 2, within.var = 2, sig.level = 0.05, power = NULL)
power.anova.test(groups = 4, n = 22,between.var = 1, within.var = 2, sig.level = 0.05, power = NULL)
power.anova.test(groups = 4, n = 22,between.var = 1, within.var = 3, sig.level = 0.05, power = NULL)
power.anova.test(groups = 4, n = 10,between.var = 1, within.var = 2, sig.level = 0.05, power = NULL)
power.anova.test(groups = 16, n = 10,between.var = 1, within.var = 2, sig.level = 0.05, power = NULL)
power.anova.test(groups = 16, n = 10,between.var = 2, within.var = 2, sig.level = 0.05, power = NULL)
power.anova.test(groups = 32, n = 10,between.var = 2, within.var = 2, sig.level = 0.05, power = NULL)
power.anova.test(groups = 32, n = NULL,between.var = 2, within.var = 2, sig.level = 0.05, power = 0.9)
power.anova.test(groups = 32, n = 8,between.var = 2, within.var = 2, sig.level = 0.05, power = NULL)
114.5/7
power.anova.test(groups = 8, n = NULL ,between.var = 16, within.var = 114.5, sig.level = 0.05, power = NULL)
power.anova.test(groups = 8, n = NULL ,between.var = 16, within.var = 114.5, sig.level = 0.05, power = 0.9)
power.anova.test(groups = 8, n = NULL ,between.var = 10, within.var = 114.5, sig.level = 0.05, power = 0.9)
power.anova.test(groups = 4, n = NULL ,between.var = 10, within.var = 114.5, sig.level = 0.05, power = 0.9)
power.anova.test(groups = 4, n = NULL ,between.var = 16, within.var = 114.5, sig.level = 0.05, power = 0.9)
power.anova.test(groups = 4, n = NULL ,between.var = 16, within.var = 114.5, sig.level = 0.05, power = 0.8)
pwr.2way(a=3, b=3, alpha=0.05, size.A=4, size.B=5, delta.A=4, delta.B=2, sigma.A=2, sigma.B=2)
install.packages("pwr2")
# two way anova:
library(pwr2)
pwr.2way(a=4, b=2, alpha=0.05, size.A=30, size.B=15, delta.A=50, delta.B=80, sigma.A=140, sigma.B=160)
pwr.2way(a=4, b=2, alpha=0.05, size.A=30, size.B=120, delta.A=50, delta.B=80, sigma.A=140, sigma.B=160)
pwr.2way(a=4, b=2, alpha=0.05, size.A=30, size.B=120, sigma.A=140, sigma.B=160)
ss.2way(a=4, b=2, alpha=0.05, beta=0.15, f.A=NULL, f.B=NULL,
delta.A=NULL, delta.B=NULL, sigma.A=NULL, sigma.B=NULL, B=B)
ss.2way(a=4, b=2, alpha=0.05, beta=0.15, f.A=NULL, f.B=NULL,
delta.A=NULL, delta.B=NULL, sigma.A=NULL, sigma.B=NULL, B=100)
ss.2way(a=4, b=2, alpha=0.05, beta=0.15, f.A=NULL, f.B=NULL,
delta.A=50, delta.B=80, sigma.A=NULL, sigma.B=NULL, B=100)
ss.2way(a=4, b=2, alpha=0.05, beta=0.15, f.A=NULL, f.B=NULL,
delta.A=50, delta.B=80, sigma.A=140, sigma.B=160, B=100)
ss.2way(a=4, b=2, alpha=0.05, beta=0.15, f.A=2.6, f.B=3.0, B=100)
power.anova.test(groups = 4, n = NULL ,between.var = 16, within.var = 114.5, sig.level = 0.05, power = 0.9)
power.anova.test(groups = 4, n = 25 ,between.var = 16, within.var = 114.5, sig.level = 0.05, power = NULL)
power.anova.test(groups = 4, n = 25 ,between.var = 14, within.var = 114.5, sig.level = 0.05, power = NULL)
load("~/Dropbox/Myoglobin_Liverpool/Ucrit stuff/Liverpool/qPCR_script_jenni.R")
power.anova.test(groups = 8, n = 40, between.var = 0.05, within.var = 1, sig.level = 0.05, power = NULL)
power.anova.test(groups = 8, n = 40, between.var = 1, within.var = 0.05, sig.level = 0.05, power = NULL)
power.anova.test(groups = 8, n = 40, between.var = 0.07, within.var = 0.05, sig.level = 0.05, power = NULL)
power.anova.test(groups = 8, n = 40, between.var = 0.07, within.var = 0.05, sig.level = 0.01, power = NULL)
power.anova.test(groups = 8, n = 10, between.var = 0.07, within.var = 0.05, sig.level = 0.01, power = NULL)
power.anova.test(groups = 8, n = 10, between.var = 7, within.var = 5, sig.level = 0.01, power = NULL)
power.anova.test(groups = 8, n = 5, between.var = 7, within.var = 5, sig.level = 0.01, power = NULL)
load("~/Dropbox/Taimenet/Paltamo2017_data/Metab_reanalysis_2019/Metab_reanalysis_all_Dec19.RData")
head(all.slopes.Batch1)
## Plot consumption across time
plot(all.slopes.Batch1$Slope.with.BR, all.slopes.Batch1$Date.Time)
## Plot consumption across time
plot(all.slopes.Batch1$Date.Time, all.slopes.Batch1$Slope.with.BR)
## Plot consumption across time
plot(subset(all.slopes.Batch1, Chamber.No =="CH1")$Date.Time, subset(all.slopes.Batch1, Chamber.No =="CH1")$Slope.with.BR)
################################################
## Metabolic rate analysis from brown trout
## October 2019, Jenni Prokkola
################################################
library(FishResp)
## Extract the slope as desired. Use method MLND (Chabot et al. 2016) if possible. Check the number of accepted slopes.
mlnd.slopes.Batch1<- extract.slope(MR.clean.Batch1, method="calcSMR.mlnd", r2=0.9)
?fishresp
??FishResp
load("~/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/Behav_Rlib_Feb19.RData")
setwd("/Users/jenni/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/Github_repo")
setwd("/Users/jenni/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/Results")
############################################################################
### Models for behaviour data from angling selection experiment.
### Jenni Prokkola 2019
###
############################################################################
library(ggplot2)
#devtools::install_github("thomasp85/patchwork")
library(patchwork)
library(lme4)
library(lmerTest)
library(coxme)
library(survival)
library(lmfor)
library(nlme)
library(car)
library(tidyverse)
# Install source packages to use ggeffects:
#library(devtools)
#devtools::install_github("strengejacke/sjlabelled")
#devtools::install_github("strengejacke/sjmisc")
#devtools::install_github("glmmTMB/glmmTMB/glmmTMB")
#devtools::install_github("strengejacke/sjstats")
#devtools::install_github("strengejacke/ggeffects")
library(ggeffects)
library(blmeco)
> setwd("/Users/jenni/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/Github_repo/Datasets")
setwd("/Users/jenni/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/Github_repo/Datasets")
Behav_all<-read.table(file="Behav_data_Prokkola_etal.txt", header=T, sep="\t", dec=".")
Behav_all<-read.table(file="Behavdata_Prokkola_etal.txt", header=T, sep="\t", dec=".")
# Note: Out time min gets value 9.75 when fish did not emerge during trial.
str(Behav_all)
# Beh batch has two levels above 5, but with only 4 fish. These can be combined to batch 5 for the purpose of the analysis.
Behav_all$Beh_batch<-ifelse(Behav_all$Beh_batch >5, 5, Behav_all$Beh_batch)
Behav_all$Beh_batch<-as.factor(Behav_all$Beh_batch)
Behav_all$Arena<-as.factor(Behav_all$Arena)
Behav_all$ID<-as.factor(Behav_all$ID)
### 2.1. GLMM for exploration (1=yes, 0=no), all trials included
glmer_exp<-glmer(Explorated ~ Photoperiod + Pop + Selection + Repeat
+  Pop : Selection + Pop : Photoperiod
+(1| ID) + (1|Arena) + (1|Beh_batch),
data=Behav_all, family=binomial(link="logit"))
glmer_exp02<-glmer(Explorated ~ Photoperiod + Pop + Selection + Repeat
+  Pop : Selection + Pop : Photoperiod
+(1| ID) + (1|Beh_batch),
data=Behav_all, family=binomial(link="logit"))
## Test the two models with likelihood ratio test
anova(glmer_exp, glmer_exp02) #better fit in 1, keep Arena in model
summary(glmer_exp)
Anova(glmer_exp)
# Assess overdispersion, https://stat.ethz.ch/pipermail/r-sig-mixed-models/2011q1/012632.html
rdev <- sum(residuals(glmer_exp)^2)
mdf <- length(fixef(glmer_exp))
rdf <- nrow(Behav_all)-mdf
rdev/rdf #Not looking overdispersed.
### 2.2. Plot predicted exploration with 75% confidence intervals per group.
exp_pred<-ggpredict(glmer_exp, terms= c("Selection","Pop", "Photoperiod"),
ci.lvl = 0.75, x.as.factor=T, condition = c(Repeat = -1))
pred_exp_plot<-
ggplot(exp_pred, aes(y= predicted, x=group, group = x))+
facet_wrap( ~ facet)+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
position = position_dodge(.2),
width=0.2) +
geom_point(position = position_dodge(.2), aes(col= x), stat = "identity",
size=2)+
ylab("Predicted probability for exploration (75% CI)")+
scale_colour_manual(values=c("hotpink", "blue"))+
theme_bw()+
theme(panel.spacing.x=unit(0, "lines"),
axis.text.y = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=8, vjust=0.6),
axis.title.x = element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major=element_blank(),
legend.title = element_blank(),
legend.position = "none")
pred_exp_plot
### 2.2. Plot predicted exploration with 75% confidence intervals per group (not incl. photoperiod).
exp_pred<-ggpredict(glmer_exp, terms= c("Selection","Pop"),
ci.lvl = 0.75, x.as.factor=T, condition = c(Repeat = -1))
pred_exp_plot<-
ggplot(exp_pred, aes(y= predicted, x=group, group = x))+
# facet_wrap( ~ facet)+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
position = position_dodge(.2),
width=0.2) +
geom_point(position = position_dodge(.2), aes(col= x), stat = "identity",
size=2)+
ylab("Predicted probability for exploration (75% CI)")+
scale_colour_manual(values=c("hotpink", "blue"))+
theme_bw()+
theme(panel.spacing.x=unit(0, "lines"),
axis.text.y = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=8, vjust=0.6),
axis.title.x = element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major=element_blank(),
legend.title = element_blank(),
legend.position = "none")
pred_exp_plot
## Model for exploration including sex, no photoperiod
glmer_exp03<-glmer(Explorated ~ Pop + Selection + Repeat + Sex
+  Pop : Selection +(1| ID) + (1|Arena) + (1|Beh_batch),
data=Behav_all, family=binomial(link="logit"))
summary(glmer_exp03)
Anova(glmer_exp03)
Intensity_data<-subset(Behav_all, Intensity >-1)
hist(Intensity_data$Intensity)
lmer_int_all<-lmer(Intensity ~  Photoperiod + Pop + Selection
+ Photoperiod:Pop+ Pop: Selection + Repeat
+ (1| ID) + (1|Arena) + (1|Beh_batch), data=Intensity_data)
summary(lmer_int_all)
anova(lmer_int_all)
plot(fitted(lmer_int_all),resid(lmer_int_all, type="pearson"))
mywhiskers(fitted(lmer_int_all),resid(lmer_int_all, type="pearson"), add=T, se=F)
Intensity_data$fitted_int<-fitted(lmer_int_all)
lmer_int_all<-lme(Intensity~ Photoperiod + Pop + Selection
+ Photoperiod:Pop+ Pop: Selection + Repeat,
random = ~ 1| ID, data = Intensity_data,
na.action = "na.omit", weights = varPower(form=~fitted_act))
lmer_int_all<-lme(Intensity~ Photoperiod + Pop + Selection
+ Photoperiod:Pop+ Pop: Selection + Repeat,
random = ~ 1| ID, data = Intensity_data,
na.action = "na.omit", weights = varPower(form=~fitted_int))
summary(lmer_int_all)
plot(fitted(lmer_int_all),resid(lmer_int_all, type="pearson"))
#Residuals and fitted values with lines to help visualization:
mywhiskers(fitted(lmer_int_all),resid(lmer_int_all, type="pearson"), add=T, se=F)
# Use var power 1.585213 in full model
lmer_int_all2<-lmer(Intensity ~  Photoperiod + Pop + Selection
+ Photoperiod:Pop+ Pop: Selection + Repeat
+ (1| ID) + (1|Arena) + (1|Beh_batch),
data=Intensity_data, weight=1/fitted_int^(2*1.585213))
summary(lmer_int_all2)
anova(lmer_int_all2, type="3")
plot(fitted(lmer_int_all2),resid(lmer_int_all2, type="pearson"))
#Residuals and fitted values with lines to help visualization:
mywhiskers(fitted(lmer_int_all2),resid(lmer_int_all2, type="pearson"), add=T, se=F)
qqnorm(resid(lmer_int_all2, type="pearson"))
lht(lmer_int_all2,
hypothesis.matrix = c("PopVAA = 0", "PopVAA:SelectionLV = 0", "Photoperiod24:PopVAA = 0"), test = "F")
# Test population (use coef() to get names)
coef(lmer_int_all2)
lht(lmer_int_all2,
hypothesis.matrix = c("PopWild = 0", "PopWild:SelectionLV = 0", "Photoperiod24:PopWild = 0"), test = "F")
# Test selection line
lht(lmer_int_all2,
hypothesis.matrix = c("PopWild:SelectionLV = 0", "SelectionLV = 0"),
test = "F")
lht(lmer_int_all2,
hypothesis.matrix = c("Photoperiod24:PopWild = 0","Photoperiod24 = 0"),
test = "F")
int_pred<-ggpredict(lmer_int_all2, terms= c("Selection","Pop", "Photoperiod"),
ci.lvl = 0.75, x.as.factor=T, condition = c(Repeat = -1))
pred_int_plot<-
ggplot(int_pred, aes(y= predicted, x=group, group = x))+
facet_wrap( ~ facet)+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
position = position_dodge(.2),
width=0.2) +
geom_point(position = position_dodge(.2), aes(col= x),
stat = "identity",size=2)+
ylab("Predicted exploration intensity (75% CI)")+
scale_colour_manual(values=c("hotpink", "blue"))+
theme_bw()+
theme(panel.spacing.x=unit(0, "lines"),
axis.text.y = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=8, vjust=0.6),
axis.title.x = element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major=element_blank(),
legend.title = element_blank(),
legend.position = c(0.85,0.8))
pred_int_plot
### 2.5. Exploration intensity model including fish sex, no photoperiod
lmer_int_all_sex<-lmer(Intensity ~   Pop + Selection + Sex
+ Pop: Selection + Repeat
+ (1| ID) + (1|Arena) + (1|Beh_batch),
data=Intensity_data, weight=1/fitted_int^(2*1.585213))
summary(lmer_int_all_sex)
anova(lmer_int_all_sex, type="3")
Behav_all$status<-ifelse(Behav_all$Out_time_min== 9.75, 1, 2)
Behav_all$Surv<-Surv(Behav_all$Out_time_min, Behav_all$status==2)
mixed_cox <- coxme(Surv ~  Photoperiod + Pop + Selection + Repeat
+  Pop : Selection + Pop : Photoperiod
+(1| ID) + (1|Arena) + (1|Beh_batch), data = Behav_all)
mixed_cox
km.by.group <- survfit(Surv ~ Group, data = Behav_all, conf.type = "log-log")
summary(km.by.group) # Show all observations by group
## Plot using ascending curves:
par(mai = c(0.6,0.6, 0.2,0.2))
plot(km.by.group, fun ="event", lty=1:4, col=c("hotpink", "blue", "hotpink", "blue"), lwd=1.2, conf.int = F,  yaxt="n", xaxt="n")
axis(side = 1,at=1:9, tck = -.015, labels = NA)
axis(side = 2, tck = -.015, labels = NA)
axis(1, at=1:9, labels= 1:9, tick=F, lwd=0, line=-0.8, cex.axis=0.6)
axis(2,las=1, lwd=0, line=-0.6, cex.axis = 0.6 )
mtext(side = 2, "Proportion of individuals emerged" , line = 1.5, cex=0.6)
mtext(side = 1, "Time / min" , line = 1.2, cex=0.6)
legend(5.5, .35, c("Hatchery HV","Hatchery LV", "Wild HV", "Wild LV"), lty=1:4, cex = 0.7, bty="n", col=c("hotpink", "blue", "hotpink", "blue"), y.intersp = 1.2)
par(mai = c(0.6,0.6, 0.2,0.2))
plot(km.by.group, fun ="event", lty=1:4, col=c("hotpink", "blue", "hotpink", "blue"), lwd=1.2, conf.int = F,  yaxt="n", xaxt="n")
axis(side = 1,at=1:9, tck = -.015, labels = NA)
axis(side = 2, tck = -.015, labels = NA)
axis(1, at=1:9, labels= 1:9, tick=F, lwd=0, line=-0.8, cex.axis=0.6)
axis(2,las=1, lwd=0, line=-0.6, cex.axis = 0.6 )
mtext(side = 2, "Proportion of individuals emerged" , line = 1.5, cex=0.6)
mtext(side = 1, "Time / min" , line = 1.2, cex=0.6)
legend(5.5, .35, c("Hatchery HV","Hatchery LV", "Wild HV", "Wild LV"), lty=1:4, cex = 0.7, bty="n", col=c("hotpink", "blue", "hotpink", "blue"), y.intersp = 1.2)
### 2.7. Boldness model including fish sex, no photoperiod
mixed_cox2 <- coxme(Surv ~ Pop + Selection + Repeat + Sex
+  Pop : Selection +(1| ID) + (1|Arena) + (1|Beh_batch), data = Behav_all)
mixed_cox2
# 3.1. Activity and MO2min. Get predictions of individual activity (BLUPS)
int_BLUPs<- data_frame(ID = row.names(ranef(lmer_int_all2)$ID),
int_BLUP = ranef(lmer_int_all2)$ID[,"(Intercept)"])
# 3.1. Activity and MO2min. Get predictions of individual activity (BLUPS)
int_BLUPs<- tibble(ID = row.names(ranef(lmer_int_all2)$ID),
int_BLUP = ranef(lmer_int_all2)$ID[,"(Intercept)"])
int_BLUPs
pred_exp_plot
pred_int_plot
save.image("~/Dropbox/Taimenet/Paltamo2017_data/Jenni_Nico_Analyysit/Behav_Rlib_Mar20.RData")
